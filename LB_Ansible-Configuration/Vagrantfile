# Vagrant 3 VMs: lb + 2x app, cu ansible rulat de pe host (prod-like)
VAGRANT_BOX = "ubuntu/jammy64"  # Ubuntu 22.04
NET = "192.168.56"
LB_IP   = "#{NET}.10"
APP1_IP = "#{NET}.11"
APP2_IP = "#{NET}.12"

Vagrant.configure("2") do |config|
  config.vm.box_check_update = false

  # Setări generale
  def base_vm(vm, host, ip)
    vm.vm.box = VAGRANT_BOX
    vm.vm.hostname = host
    vm.vm.network "private_network", ip: ip
    vm.vm.provider "virtualbox" do |vb|
      vb.name = host
      vb.cpus = 2
      vb.memory = 1024
    end
    # no synced folder clutter
    vm.vm.synced_folder ".", "/vagrant", disabled: true
  end

  config.vm.define "app1" do |app|
    base_vm(app, "app1", APP1_IP)
  end

  config.vm.define "app2" do |app|
    base_vm(app, "app2", APP2_IP)
  end

  config.vm.define "lb" do |lb|
    base_vm(lb, "lb", LB_IP)

    # Rulăm UN SINGUR ansible play peste TOATE VM-urile
    lb.vm.provision "ansible" do |ansible|
      ansible.playbook = "playbooks/main.yaml"
      ansible.compatibility_mode = "2.0"
      ansible.become = true
      ansible.host_key_checking = false
      # grupăm mașinile pentru playbook
      ansible.groups = {
        "lb"  => ["lb"],
        "app" => ["app1", "app2"]
      }
      ansible.extra_vars = {
        lb_ip: LB_IP, app_ips: [APP1_IP, APP2_IP]
      }
      # IMPORTANT: ca să poată provisiona toate, celelalte VM-uri trebuie să fie deja pornite
      ansible.limit = "all"
    end
  end
end
